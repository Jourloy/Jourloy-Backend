// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id                Int          @id @default(autoincrement())
  username          String
  lowercaseUsername String
  avatar            String
  refreshTokens     String[]
  role              String
  password          String?
  googleId          String?
  apiKey            String?
  calculator        Calculator[]
  tracker           Tracker[]
  createdAt         DateTime     @default(now())
  updatedAt         DateTime     @updatedAt
}

// TRACKER MODEL //

model Tracker {
  id         Int      @id @default(autoincrement())
  name       String
  limit      Int
  startLimit Int
  dayLimit   Int
  months     Int
  calc       String
  owner      User     @relation(fields: [ownerId], references: [id])
  ownerId    Int
  startDate  DateTime @default(now())
  spends     Spend[]
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt
}

model Spend {
  id          Int       @id @default(autoincrement())
  cost        Int
  category    String
  description String?
  date        DateTime?
  repeat      String?
  tracker     Tracker   @relation(fields: [trackerId], references: [id])
  trackerId   Int
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
}

// CALCULATOR MODEL //

model Calculator {
  id        Int        @id @default(autoincrement())
  name      String
  positions Position[]
  members   Member[]
  owner     User       @relation(fields: [ownerId], references: [id])
  ownerId   Int
  createdAt DateTime   @default(now())
  updatedAt DateTime   @updatedAt
}

model Member {
  id           Int        @id @default(autoincrement())
  name         String
  calculator   Calculator @relation(fields: [calculatorId], references: [id])
  calculatorId Int
  payer        Boolean?   @default(false)
  createdAt    DateTime   @default(now())
  updatedAt    DateTime   @updatedAt
}

model Position {
  id           Int        @id @default(autoincrement())
  name         String
  cost         Int
  memberIds    Int[]
  payerId      Int?
  calculator   Calculator @relation(fields: [calculatorId], references: [id])
  calculatorId Int
}
